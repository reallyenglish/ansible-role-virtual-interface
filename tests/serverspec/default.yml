- hosts: localhost
  pre_tasks:

    - name: See if pre_tasks has been performed before
      stat:
        path: /tmp/pre_tasks
      register: register_pre_tasks
      changed_when: false

    # Create gre1 which this playbook will remove (FreeBSD)
    - name: Add gre1 to cloned_interfaces in rc.conf(5)
      lineinfile:
        dest: /etc/rc.conf
        line: "cloned_interfaces=\"${cloned_interfaces} gre1\""
      changed_when: false
      when:
        - "{{ ansible_os_family == 'FreeBSD' }}"
        - "{{ not register_pre_tasks.stat.exists }}"

    - name: Add ifconfig_gre1 to rc.conf(5)
      lineinfile:
        dest: /etc/rc.conf
        line: "ifconfig_gre1=\"up\""
      changed_when: false
      when:
        - "{{ ansible_os_family == 'FreeBSD' }}"
        - "{{ not register_pre_tasks.stat.exists }}"

    - name: Create gre1
      service:
        name: netif
        arguments: gre1
        state: started
      changed_when: false
      when:
        - "{{ ansible_os_family == 'FreeBSD' }}"
        - "{{ not register_pre_tasks.stat.exists }}"

    # Create gre1 which this playbook will remove (OpenBSD)
    - name: Create hostname.gre1
      lineinfile:
        dest: /etc/hostname.gre1
        regexp: "^"
        line: "up"
        mode: 0640
        state: present
        create: True
      changed_when: false
      when:
        - "{{ ansible_os_family == 'OpenBSD' }}"
        - "{{ not register_pre_tasks.stat.exists }}"

    - name: Start gre1
      command: sh /etc/netstart gre1
      changed_when: false
      when:
        - "{{ ansible_os_family == 'OpenBSD' }}"
        - "{{ not register_pre_tasks.stat.exists }}"

    - name: Create a marker that indicates pre_tasks has been performed
      file:
        path: /tmp/pre_tasks
        state: touch
      when: "{{ not register_pre_tasks.stat.exists }}"
      changed_when: false

  roles:
    - ansible-role-virtual-interface
  vars:
    virtual_interface:
      gre0:
        config: |
          {% if ansible_os_family == 'OpenBSD' %}
          !echo Starting \${if}
          description "GRE tunnel"
          up
          {% elif ansible_os_family == 'FreeBSD' %}
          inet 10.0.2.15 10.0.2.100 tunnel 192.168.1.100 192.168.2.100 grekey MY_GRE_KEY
          {% endif %}
    virtual_interface_to_remove:
      - gre1
